
==================== FINAL INTERFACE ====================
2018-05-10 21:46:28.138785 UTC

interface Wumpus-0.1.0.0-D1TacMFmgAYJAYcOJpdZPu:Wumpus 8022
  interface hash: ef29624a862369aba3832aff7a407b47
  ABI hash: 0a63c172512870b919215774438417ef
  export-list hash: 7d1ba74d8180db523b681d282940ae05
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 0451a77cc0d8e5d99d548d6441c7dd35
  sig of: Nothing
  used TH splices: False
  where
exports:
  Wumpus.playerIsAdjacent
  Wumpus.wMove
  Wumpus.Wumpus{Wumpus.Wumpus prevWLoc wLoc}
module dependencies: Map
package dependencies: array-0.5.2.0 base-4.10.1.0 deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 random-1.1 time-1.8.0.2
orphans: time-1.8.0.2:Data.Time.Format.Parse
         time-1.8.0.2:Data.Time.LocalTime.Internal.ZonedTime
         time-1.8.0.2:Data.Time.LocalTime.Internal.LocalTime
         time-1.8.0.2:Data.Time.Calendar.Gregorian base-4.10.1.0:GHC.Float
         base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
import  -/  Map e653fa8a062c2feb341a696d46cf12e0
  exports: cf6ab5f18517952763aea6840b829242
  Map f8a03b34f636d3c13a679d3cc4977712
  adjacentRooms 0158ea3cf30eeb24b6f2baa7be4f95f9
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  base-4.10.1.0:System.IO 525805ab19df5e4fe6d8de7dde9cb909
01cd25f3c7d63df4430a6f0af9bd8839
  $tc'Wumpus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14414040655840414461##
                   13583651619445248043##
                   Wumpus.$trModule
                   Wumpus.$tc'Wumpus2
                   0#
                   Wumpus.$tc'Wumpus1) -}
f8128a322f370631d2c0b0c9cdc7a491
  $tc'Wumpus1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
d724c3f72f6ab6c34c55474c1fcf64dd
  $tc'Wumpus2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Wumpus.$tc'Wumpus3) -}
ed19e9cd42ce7ac7c1a0c63a6f8d50c3
  $tc'Wumpus3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("'Wumpus"#) -}
3b96cabbb7b7d8adf380176d5e103932
  $tcWumpus :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   18153861800104021775##
                   862693677902704327##
                   Wumpus.$trModule
                   Wumpus.$trModule1
                   0#
                   GHC.Types.krep$*) -}
a27603f7260ababcc0c18c95a0588b1b
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Wumpus.$trModule3
                   Wumpus.$trModule1) -}
234f89e6d57a7d4d0d5d5f5134e5c94c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Wumpus.$trModule2) -}
b8a24478465ee387a2257676b42974e1
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Wumpus"#) -}
e0c661daefecb94ebce84f521939a65b
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Wumpus.$trModule4) -}
88f608d74b1f60a472c1c34e421a0dbb
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("Wumpus-0.1.0.0-D1TacMFmgAYJAYcOJpdZPu"#) -}
520e27686c7a6e123bcf3171b21c5245
  $wplayerIsAdjacent ::
    GHC.Types.Int -> [Map.Room] -> GHC.Prim.Int# -> GHC.Types.Bool
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (w :: GHC.Types.Int)
                   (ww :: [Map.Room])
                   (ww1 :: GHC.Prim.Int#) ->
                 case GHC.List.$w!!
                        @ Map.Room
                        ww
                        (GHC.Prim.-# ww1 1#) of wild2 { Map.Room ds3 ds4 ->
                 GHC.List.elem @ GHC.Types.Int GHC.Classes.$fEqInt w ds4 }) -}
5af9aa1bde9e15e113de3baff7896b4c
  data Wumpus
    = Wumpus {wLoc :: GHC.Types.Int, prevWLoc :: GHC.Types.Int}
9d91376d7ef267e560ea9fad8860f64e
  playerIsAdjacent ::
    GHC.Types.Int -> Map.Map -> Wumpus.Wumpus -> GHC.Types.Bool
  {- Arity: 3,
     Strictness: <L,U><S(SLL),1*U(1*U,A,A)><S(S(S)L),1*U(1*U(U),A)>,
     Inline: [0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: GHC.Types.Int) (w1 :: Map.Map) (w2 :: Wumpus.Wumpus) ->
                 case w1 of ww { Map.Map ww1 ww2 ww3 ->
                 case w2 of ww4 { Wumpus.Wumpus ww5 ww6 ->
                 case ww5 of ww7 { GHC.Types.I# ww8 ->
                 Wumpus.$wplayerIsAdjacent w ww1 ww8 } } }) -}
5af9aa1bde9e15e113de3baff7896b4c
  prevWLoc :: Wumpus.Wumpus -> GHC.Types.Int
  RecSel Left Wumpus.Wumpus
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Wumpus.Wumpus) ->
                 case ds of wild { Wumpus.Wumpus ds1 ds2 -> ds2 }) -}
5af9aa1bde9e15e113de3baff7896b4c
  wLoc :: Wumpus.Wumpus -> GHC.Types.Int
  RecSel Left Wumpus.Wumpus
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Wumpus.Wumpus) ->
                 case ds of wild { Wumpus.Wumpus ds1 ds2 -> ds1 }) -}
097ac61ec96af40515f23066bf596a54
  wMove :: GHC.Types.Int -> Wumpus.Wumpus -> Wumpus.Wumpus
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><L,1*U(1*U,A)>m,
     Unfolding: InlineRule (2, True, False)
                (\ (x :: GHC.Types.Int) (w :: Wumpus.Wumpus) ->
                 Wumpus.Wumpus x (case w of wild { Wumpus.Wumpus ds ds1 -> ds })) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

